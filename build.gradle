plugins {
    id 'java'
    id 'maven'
    id 'net.minecraftforge.gradle.forge' version '581a86dcbe'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

version = "1.0"
group = "com.confusinguser.confusingaddons"
archivesBaseName = "ConfusingAddons"
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    coreMod = "com.confusinguser.confusingaddons.asm.core.FMLLoadingPlugin"
    clientRunArgs = findProperty("clientArgs")?.split() ?: []

    mappings = "stable_22"
}

dependencies {
    shadow 'com.github.HypixelDev.PublicAPI:Java:2.0.0'
    compile 'com.github.HypixelDev.PublicAPI:Java:2.0.0'
}

jar {
    archiveName = archivesBaseName + "-" + version + ".jar"
    enabled = false
}

shadowJar {
    archiveName = archivesBaseName + "-" + version + ".jar"
    manifest {
        attributes FMLCorePlugin: "com.confusinguser.confusingaddons.asm.core.FMLLoadingPlugin",
                FMLAT: "confusingaddons_at.cfg",
                ModSide: "CLIENT",
                ForceLoadAsMod: true,
                FMLCorePluginContainsFMLMod: true
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    rename '(.+_at.cfg)', 'META-INF/$1'

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.build.dependsOn shadowJar

artifacts {
    archives shadowJar
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}
tasks.reobfShadowJar.mustRunAfter shadowJar
tasks.build.dependsOn reobfShadowJar
