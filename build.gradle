plugins {
    id 'java'
    id 'maven'
    id 'net.minecraftforge.gradle.forge' version '581a86dcbe'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

version = "1.0"
group = "com.confusinguser.confusingaddons"
archivesBaseName = "ConfusingAddons"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    main {
        output.resourcesDir = java.classesDirectory
    }
}

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    coreMod = "com.confusinguser.confusingaddons.asm.core.FMLLoadingPlugin"
    clientRunArgs = findProperty("clientArgs")?.split() ?: []

    mappings = "stable_22"
}

dependencies {
    shadow 'com.github.HypixelDev.PublicAPI:Java:2.0.0'
    compile 'com.github.HypixelDev.PublicAPI:Java:2.0.0'
    // jsoup HTML parser library @ https://jsoup.org/
    shadow 'org.jsoup:jsoup:1.13.1'
    compile 'org.jsoup:jsoup:1.13.1'
}

jar {
    archiveFileName = archivesBaseName + "-" + project.version + ".jar"
    enabled = false
}

shadowJar {
    archiveFileName = archivesBaseName + "-" + project.version + ".jar"
    manifest {
        attributes FMLCorePlugin: "com.confusinguser.confusingaddons.asm.core.FMLLoadingPlugin",
                FMLAT: "confusingaddons_at.cfg",
                ModSide: "CLIENT",
                ForceLoadAsMod: true,
                FMLCorePluginContainsFMLMod: true
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

processResources.doLast {

    description 'Copies resource files to dir FML expects resourcePack to be'

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    ext.srcFiles = "$projectDir/src/main/resources"
    ext.destDir = "$projectDir/build/classes/main"

    // registering inputs & outputs allow gradle to skip if UP-TO-DATE
    inputs.files srcFiles
    outputs.dir destDir

    println 'starting processResources'
    println 'srcFiles: ' + srcFiles
    println 'destDir: ' + destDir

    copy {
        // replace stuff in mcmod.info, nothing else
        from(srcFiles)
        into(destDir)
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version

    }

    copy {
        // copy everything else, thats not the mcmod.info
        from(srcFiles)
        into(destDir)
        exclude 'mcmod.info'
    }
}

task copyAssets(type: Copy) {
    from "${projectDir}/src/main/resources/assets"
    into "${projectDir}/classes/production/ConfusingAddons.main/assets"
}

tasks.assemble.finalizedBy(tasks.copyAssets)

artifacts {
    archives shadowJar
}

